apiVersion: v1
kind: Namespace
metadata:
  name: py-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fastapiv1
  labels:
    app: fastapi
  namespace: py-app
spec:
  # modify replicas according to your case
  replicas: 3
  selector:
    matchLabels:
      app: fastapi
  template:
    metadata:
      labels:
        app: fastapi
    spec:
      volumes:
        - name: sec-vol
          secret:
            secretName: accesstoken
      containers:
        - name: pypod
          image: localhost:5001/py-app:1.0
          volumeMounts:
            - name: sec-vol
              mountPath: "/secret/"
          env:
            - name: Creds
              valueFrom:
                secretKeyRef:
                  name: env-Secret
                  key: cred
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
      restartPolicy: Always

---

kind: Service
apiVersion: v1
metadata:
  name: svc-fastapiv1
  namespace: py-app
spec:
  selector:
    app: fastapi
  ports:
  - port: 8080
    targetPort: 80

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fastapi-ingress
  namespace: py-app
spec:
  rules:
  - http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: svc-fastapiv1
            port:
              number: 8080
